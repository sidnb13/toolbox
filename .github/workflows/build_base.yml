name: Build Base Images

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "src/mltoolbox/base/**"
      - ".github/workflows/build_base.yml"

permissions:
  contents: read
  packages: write
  actions: write
  checks: write
  deployments: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tomli
        run: pip install tomli

      - name: Setup NVIDIA Container Toolkit
        run: |
          sudo apt-get update
          sudo apt-get install -y curl ca-certificates
          curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | \
            sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
          curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
          sudo apt-get update
          sudo apt-get install -y nvidia-container-toolkit
          sudo nvidia-ctk runtime configure --runtime=docker
          sudo systemctl restart docker

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Get Version
        id: version
        run: |
          VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Linux base image
        uses: docker/build-push-action@v5
        with:
          context: src/mltoolbox/base
          file: src/mltoolbox/base/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ml-base:latest
            ghcr.io/${{ github.repository_owner }}/ml-base:linux
            ghcr.io/${{ github.repository_owner }}/ml-base:linux-${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/ml-base:linux-${{ github.sha }}
          build-args: |
            CUDA_VERSION=12.1.0
            PYTHON_VERSION=3.12
            GIT_EMAIL=${{ github.event.repository.owner.email || github.actor }}@users.noreply.github.com
            GIT_NAME=${{ github.repository_owner }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.platform=linux

  build-mac:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install tomli
        run: pip install tomli

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64
          driver-opts: |
            image=moby/buildkit:master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        id: version
        run: |
          VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push macOS base image
        uses: docker/build-push-action@v5
        with:
          context: src/mltoolbox/base
          file: src/mltoolbox/base/Dockerfile.mac
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/ml-base:mac
            ghcr.io/${{ github.repository_owner }}/ml-base:mac-${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/ml-base:mac-${{ github.sha }}
          build-args: |
            PYTHON_VERSION=3.12
            GIT_EMAIL=${{ github.event.repository.owner.email || github.actor }}@users.noreply.github.com
            GIT_NAME=${{ github.repository_owner }}
