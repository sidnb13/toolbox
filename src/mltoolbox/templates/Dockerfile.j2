ARG PYTHON_VERSION
ARG GIT_NAME
ARG GIT_EMAIL
ARG PROJECT_NAME
ARG VARIANT

FROM ghcr.io/${GIT_NAME}/ml-base:py${PYTHON_VERSION}-${VARIANT}

# Redefine ARGs to make them available after FROM
ARG PYTHON_VERSION
ARG GIT_NAME
ARG GIT_EMAIL
ARG PROJECT_NAME
ARG VARIANT
ARG SSH_KEY_NAME

# Define ENV vars to make ARG values available at runtime
ENV PATH="/usr/local/bin:/root/.local/bin:/opt/conda/bin:${PATH}"

WORKDIR /workspace/${PROJECT_NAME}

# Ensure the virtual environment is activated by adding it to PATH
ENV PATH="/workspace/${PROJECT_NAME}/.venv/bin:${PATH}"

# Setup Git configuration
RUN git config --global user.email "${GIT_EMAIL}" && \
    git config --global user.name "${GIT_NAME}"

# Copy project files for uv
COPY pyproject.toml uv.lock* ./

# Install dependencies using uv (without --locked)
RUN echo "Installing dependencies with uv..." && \
    uv sync --extra dev

# Always install ipdb for debugging
RUN uv pip install ipdb

COPY scripts/ray-init.sh /usr/local/bin/ray-init.sh
RUN chmod +x /usr/local/bin/ray-init.sh

COPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["zsh"]